timestamps_from_cpp_macros:
  description: |
    The C pre-processor macros `__DATE__`, `__TIME__`, and `__TIMESTAMP__`
    captures the current time, and thus will obviously make a build
    unreproducible.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampFromCPPMacros
timestamps_in_documentation_generated_by_doxygen:
  description: |
    If Doxyfile contains HTML_TIMESTAMP = YES, Doxygen will add a
    timestamp to its generated documentation. 
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampInDocumentationGeneratedByDoxygen
timestamps_generated_by_docbook_to_man:
  description: |
    docbook-to-man adds a timestamp at the end of manpages it generates.
variables_in_build_info_py:
  description: |
    build_info.py contains several variables which need to be made deterministic, eg:
    BUILD_DATE='2014-10-08'
    BUILT_BY='pbuilder'
    BUILD_TIME='15:55'
    BUILT_ON='jenkins'
    BUILD_CPU='AMD Opteron 62xx (Gen 4 Class Opteron)'
cc_failures_due_to__DATE__and__TIME__warnings:
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampFromCPPMacros
  description: |
    latest reproducible builds dpkg-dev branch causes using __DATE__/__TIME__
    to become an error (-Werror=date-time) and this is on by default
timestamps_in_dvi_generated_by_latex:
  description: |
    The creation date of the DVI file is the current time.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampInDviGeneratedByLaTeX
blacklisted_on_jenkins:
  description: |
    Some packages have been blacklisted not to be tested for build reproducibility on jenkins.debian.net,
    either because their build hangs, spawns processes and doesnt kill them or because they use too much ressources.
debbindiff_runs_forever:
  description: |
    Some packages cannot be analysed by debbindiff due to it running "forever".
    Currently it's killed after 15m but we also tried an hour, didn't help.
    To find affected packages:
      grep -l "debbindiff was killed after running into timeout" *rbuild.log
  url: https://bugs.debian.org/764131
xpi_pack_saves_extra_attributes_in_jar:
  description: |
    xpi-pack, part of mozilla-devscripts, saves extra attributes when creating
    jar files. The fix is pending an upload.
  url: http://anonscm.debian.org/cgit/pkg-mozext/mozilla-devscripts.git/commit/?id=bc9f279909ac9c7e47f2b4599630565fe03230ec
timestamps_in_php_registry_files:
  description: |
    PHP registry files contain a timestamp in the _lastmodified field.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampInPhpRegistryFiles
timestamps_in_maven_pom_files:
  description: |
    Maven writes a timestamp to pom.properties files
timestamps_in_pe_binaries:
  description: |
    PE binaries contain a timestamp and maybe randomness in an UUID.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampInPEBinaries
timestamps_in_documentation_generated_by_epydoc:
  description: |
    Epydoc will add timestamps to the HTML file it produces.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampInDocumentationGeneratedByEpydoc
timestamps_in_source_generated_by_pyqt4_ui:
  description: |
    PyQt4 UI code generator writes a timestamp to the source files it creates.
random_order_in_egg_info_top_level_txt:
  description: |
    Python packages have components in `PACKAGE.egg-info/top_level.txt`
    written in a random order.
timestamps_in_documentation_generated_by_yard:
  description: |
    YARD writes timestamps in HTML files it produces.
shlibs_order_varies:
  description: |
    dh_makeshlibs output is dependent on readdir order.
