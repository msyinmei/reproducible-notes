variation_in_compilation:
  description: |
    The compiler produces different code. This issue needs more investigation and shall get an URL too...
timestamps_from_cpp_macros:
  description: |
    The C pre-processor macros `__DATE__`, `__TIME__`, and `__TIMESTAMP__`
    captures the current time, and thus will obviously make a build
    unreproducible.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsFromCPPMacros
  deterministic: True
timestamps_in_h_generated_by_qdbusxml2cpp:
  description: |
    qdbusxml2cpp uses a timestamp for its anti-double-inclusion
    definition in C header it generates.
    e.g. '#define QUERYINTERFACE_H_1425457739'
  deterministic: True
timestamps_in_documentation_generated_by_doxygen:
  description: |
    If Doxyfile contains HTML_TIMESTAMP = YES, Doxygen will add a
    timestamp to its generated documentation.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDocumentationGeneratedByDoxygen
  deterministic: True
timestamps_in_manpages_generated_by_doxygen:
  description: |
    Doxygen uses timestamp in manpages it generates
    https://bugs.debian.org/785624
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInManpagesGeneratedByDoxygen
  deterministic: True
timestamps_in_manpages_generated_by_ronn:
  description: |
    ronn embed localized dates in manpages it generates. Someone should file a bug against ronn about this and then update this note.
  deterministic: True
timestamps_in_documentation_generated_by_asciidoc:
  description: |
    asciidoc adds a timestamp at the end of a generated HTML file.
    This timestamp is based in the date of the file, but can change depending on the TZ environment variable.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDocumentationGeneratedByAsciidoc
  deterministic: True
timestamps_generated_by_docbook_to_man:
  description: |
    docbook-to-man adds a timestamp at the end of manpages it generates.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsGeneratedByDocbookToMan
  deterministic: True
random_anchor_names_generated_by_docbook_to_man:
  description: |
    docbook-to-man uses non-deterministic <a> anchor names
timestamps_in_documentation_generated_by_man2html:
  description: |
    man2html adds a timestamp at the end of a generated HTML file.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDocumentationGeneratedByMan2Html
timestamps_in_dvi_generated_by_latex:
  description: |
    The creation date of the DVI file is the current time.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDviGeneratedByLaTeX
blacklisted_on_jenkins:
  description: |
    Some packages have been blacklisted not to be tested for build reproducibility on jenkins.debian.net,
    either because their build hangs, spawns processes and doesnt kill them or because they use too much ressources.
debbindiff_runs_forever:
  description: |
    Some packages cannot be analysed by debbindiff due to it running "forever".
    Currently it's killed after 30 mins but we also tried an hour, didn't help.
    This page https://reproducible.debian.net/index_breakages.html also collects
    a list of "undiffable" packages.
timestamps_in_maven_pom_files:
  description: |
    Maven writes a timestamp to pom.properties files.  This has been fixed in Maven itself, but these files are
    also written by e.g. org.apache.felix.bundleplugin.  Additionally, anything that writes .properties files is
    likely to have the same issue.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInMavenPomProperties
  deterministic: True
timestamps_in_maven_version_files:
  description: |
    Maven writes a timestamp to version.properties files.  Probably related
    to timestamps_in_maven_pom_files issue.
locale_differences_in_pom:
  description: |
    Some tool isn't writing non-ASCII characters in pom.xml/foo.pom properly.
timestamps_in_pe_binaries:
  description: |
    PE binaries contain a timestamp and maybe randomness in an UUID.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInPEBinaries
use_epydoc:
  description: |
    Epydoc will add timestamps to the HTML file it produces. It can also generates
    different class index depending on filesystem ordering. It might also output
    references to object with a memory address.
  url: https://wiki.debian.org/ReproducibleBuilds/EpydocIssues
timestamps_in_python_code_generated_by_cheetah:
  description: |
    Cheetah embeds two timestamps into generated Python code by default.
    This can be disabled with a compiler flag.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInPythonCodeGeneratedByCheetah
random_order_in_python_environment_pickle:
  description: |
    Python doctrees writes a `environment.pickle.gz`, in a random order.
random_order_in_dh_python_autoscripts:
  url: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=792436
  description: |
    dh-python outputs autoscripts in a non-deterministic order (eg. pycompile)
random_order_in_dh_python_depends:
  description: |
    dh-python can output depends in a non-deterministic order
random_order_in_naturaldocs:
  description: |
    Natural Docs generates its documentation in a random order.
  url: https://bugs.debian.org/778962
timestamps_in_beam_files:
  description: |
    Erlang source files compiled by erlc into BEAM files contain timestamps and the build path.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInBeamFiles
fontforge_reset_modification_time:
  description: |
    When a fontforge script is used, if the font loaded is modified
    in any way, then the font modification time is set to the current
    time.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInFontsGeneratedWithFontForge
not_using_dh_builddeb:
  description: |
    We currently adjust the file mtimes in dh_builddeb. Packages which
    calls `dpkg --build` directly should have a prior call to:
    `BUILD_DATE := $(shell dpkg-parsechangelog --show-field Date)`
    and
    `find debian/tmp -newermt '$(BUILD_DATE)' -print0 | \
         xargs -0r touch --no-dereference --date='$(BUILD_DATE)'`
    Another option is to convert the build system to `dh`.
  url: https://wiki.debian.org/ReproducibleBuilds/Howto#Members_of_control.tar_and_data.tar_have_varying_mtimes
timestamps_in_gzip_headers:
  description: |
    gzip stores a timestamp by default in its header.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInGzipHeaders
timestamps_in_png:
  description: |
    PNG can capture build time with the tIME chunk or custom keywords.
    This timestamps are currently removed by strip-nondetermism, so are not visible on debbindiff anymore. Yet fixing the root cause would be nice.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInPNG
timestamps_in_static_libraries:
  description: |
    .a files are ar archives. By default, they will contain a timestamp for
    each member (.o) and for the function index.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInStaticLibraries
timestamps_in_tarball:
  description: |
    Tarball capture build time in mtime of its members.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInTarball
random_order_in_tarball:
  description: |
    The order of members inside the tarball varies.
timestamps_in_documentation_generated_by_javadoc:
  description: |
    javadoc will add timestamps to the HTML file it produces.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDocumentationGeneratedByJavadoc
random_order_in_documentation_generated_by_javadoc:
  description: |
    The `package-tree.html` file generated by javadoc contains an unsorted index.
locale_in_documentation_generated_by_javadoc:
  description: |
    javadoc embed the current locale in a "lang" attribute of the html document.
timestamps_in_documentation_generated_by_groovydoc:
  description: |
    Groovydoc will add timestamps to the HTML file it produces.
    http://sources.debian.net/src/groovy/1.8.6-4/src/main/org/codehaus/groovy/tools/groovydoc/gstringTemplates/topLevel/index-all.html/#L19
timestamps_in_jar:
  description: |
    jar (Java Archive) file stores mtimes. Most often of files generated during
    the build.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInJarFiles
  deterministic: True
timestamps_in_zip:
  description: |
    Zip archives stores mtimes. Most often of files generated during
    the build.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInZip
  deterministic: True
timestamps_difference_by_unzip:
  description: |
    Timestamps in files processed by zip/unzip have timezone variations.
    Setting TZ=UTC before calling zip/unzip the file can fix this.
timestamps_in_documentation_generated_by_groff:
  description: |
    groff will add a timestamps to documentation it produces.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDocumentationGeneratedByGroff
timestamps_in_pdf_generated_by_latex:
  description: |
    PDF files generated with pdftex and pdflatex will contain CreationDate and
    ModDate set to the current date and time.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInPDFGeneratedByLaTeX
timestamps_in_documentation_generated_by_htmldoc:
  description: |
    PDF files generated with htmldoc will contain CreationDate set to the current
    date and time.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestmapsInDocumentationGeneratedByHtmldoc
pdf_created_by_ghostscript:
  description: |
    PDF files created by Ghostscript contain timestamps and ids.
  url: https://wiki.debian.org/ReproducibleBuilds/PdfGeneratedByGhostscript
serial_numbers_in_ogg:
  description: |
    Ogg streams must include unique serial numbers. By default oggenc includes
    random serial numbers in the header, which are seeded by the current time
    and the pid.
  url: https://wiki.debian.org/ReproducibleBuilds/OggSerialNumbers
timestamps_in_pdf_generated_by_apache_fop:
  description: |
    PDF files generated with Apache FOP will contain CreationDate and
    ModDate set to the current date and time.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInPDFGeneratedByApacheFOP
timestamps_in_documentation_generated_by_texi2html:
  description: |
    eg. "Created on March 1, 2015 by texi2html 1.82"
    Wait for https://bugs.debian.org/783475
randomness_in_html_generated_by_texi2html:
  description: |
    texi2html's output varies, probably because of elements being processed
    in Perl hash order.
  url: https://wiki.debian.org/ReproducibleBuilds/RandomnessInHTMLGeneratedByTexi2html
randomness_in_gcj_output:
  description: |
    gcj's output varies, cause unknown
  url: https://wiki.debian.org/ReproducibleBuilds/RandomnessInBuildIdGeneratedByGcj
python_wheel_package:
  description: |
    Wheel is embedding timestamps into whl files. The timestamp can be overridden
    by setting the WHEEL_FORCE_TIMESTAMP environment variable to an epoch value.
  url: https://wiki.debian.org/ReproducibleBuilds/PythonWheelPackage
gtk_doc_api_index_full:
  description: |
    GTK-Doc generated HTML differs between runs.
  url: https://bugs.debian.org/779090
random_order_in_java_jar_manifest_mf:
  description: |
    Java .jar files written by some tools have a random order in MANIFEST.MF.
user_in_java_jar_manifest:
  description: |
    Java .jar files contain user login in the `Built-By` of `MANIFEST.MF`.
timestamp_in_java_bnd_manifest:
  description: |
    bndtools bnd outputs Bnd-LastModified and other entropy
implementation_version_in_java_manifest_mf:
  description: |
    Captures build time, build host and kernel version with
    Implementation-Version and Implentation-Vendor in META-INF/MANIFEST.MF
timestamps_in_python_docutils:
  description: |
    Python docutils writes timestamps into its generated documentation.
random_order_in_files_generated_by_module_build:
  description: |
    Perl files generated with Module::Build contain an unsorted dependency list.
    .
    Fixed in libmodule-build-perl, but not in the module shipped by perl itself.
  url: https://bugs.debian.org/774869
unsorted_filelist_python_support_private:
  description: |
    The files /usr/share/python-support/*.private generated by dh_pysupport contain
    an unsorted file list.
  url: https://wiki.debian.org/ReproducibleBuilds/UnsortedFilelistPythonSupportPrivate
users_and_groups_in_tarball:
  description: |
    Tarballs capture user and group for each of its members.
  url: https://wiki.debian.org/ReproducibleBuilds/UsersAndGroupsInTarballs
timestamps_in_emacs_autoloads:
  description: |
    Emacs "autoloads" comments contain a timestamp.
timestamps_in_ruby_documentation:
  description: |
    Ruby's documentation generator outputs a file called "created.rid", which contains
    the time the documentation was generated.
timestamps_in_documentation_generated_by_sphinx:
  description: |
    "Last updated," etc.
randomness_in_documentation_generated_by_sphinx:
  description: |
    Sphinx might output references to memory addresses and generate a json index file
    with entries in random order.
  url: https://wiki.debian.org/ReproducibleBuilds/SphinxIssues
randomness_in_documentation_indices_generated_by_sphinx:
  description: |
    Sphinx can output genindex.html index entries in non-deterministic order.
  url: https://github.com/sphinx-doc/sphinx/pull/1699
randomness_in_icc_colour_profiles:
  description: |
    International Color Consortium .icc colour profiles have some issue.
ppds_compressed_b64:
  description: |
    cups drivers have a field named ppds_compressed_b64 which has some issue.
  url: https://wiki.debian.org/ReproducibleBuilds/CupsPpdsIssues
zope_random_field_order_in_dzproduct:
  description: |
    Random order of entries in /usr/share/zope/Products/$package/.dzproduct generated
    by dh_installzope
  url: https://bugs.debian.org/776619
timestamps_in_files_installed_by_dh_kpatches:
  description: |
    Calls gzip without -n
  url: https://bugs.debian.org/776941
randomness_in_dh_cligacpolicy_scripts:
  description: |
    dh_cligacpolicy adds debhelper scripts in a random order
  url: https://bugs.debian.org/777185
needs_internet_access_to_build:
  description: |
    Packages which need to access sites on the internet during build.
timestamps_in_mdl_molfile:
  description: |
    MDL Molfiles (https://en.wikipedia.org/wiki/Chemical_table_file) contain a timestamp.
build_id_variation_requiring_further_investigation:
  description: |
    ld adds a Build ID in ELF binaries used to link external debug symbols.
    See https://fedoraproject.org/wiki/Releases/FeatureBuildId#Unique_build_ID for
    the spec.
    The default value is a SHA1 hash over the content of the binary. See
    the `--build-id` option in https://sourceware.org/binutils/docs-2.25/ld/Options.html
    for other behavior.
    Unless a different way to compute Build IDs has been specified, different Build IDs
    are the symptom of different binary content. The actual source of the
    difference might not be visible because the debug symbols might have been stripped
    (and they can contain filenames which can differ if the build path is different).
    There is no general solution for this problem. The source of the variation must
    be tracked and fixed. The issue can come from variations in order of object
    members or objects themselves, different content (e.g. `__DATE__` CPP
    macros or similar), or other interesting things.
timestamps_in_documentation_generated_by_podman:
  description: |
    The module Pod::Man includes timestamps in its embedded manpages:
    http://sources.debian.net/src/perl/latest/cpan/podlators/lib/Pod/Man.pm/?hl=1700#L964
    They should be based on the mtime of the original file.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInManpagesGeneratedByPodMan
timezones_manpages_podman:
  description: |
    This issue is similar to timestamps_in_documentation_generated_by_podman.
    The embedded timestamps are not from the actual build time, but instead deterministic ones
    that are only varying because of differing timezones between builds.
  url: https://bugs.debian.org/780259
  deterministic: True
random_order_in_dictionary_debconf_templates:
  description: |
    dictionaries-common-dev generates Debconf templates with a
    non-deterministic Default: key.
  url: https://bugs.debian.org/777420
timestamps_in_ada_library_information_files:
  description: |
    Ada Library Information (.ali) files contain the mtime of the Ada source (.ads) files that they index.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInAdaLibraryInformationFiles
  deterministic: False
randomness_in_ocaml_lintian_info_files:
  description: |
    dh-ocaml generates lintian info files with a non-deterministic order
  url: https://bugs.debian.org/779037
bad_handling_of_extra_warnings:
  description: |
    FTBFS if CPPFLAGS is multiple words, which breaks our CI. The package needs to be updated
    to correctly quote the output of dpkg-buildflags --get CPPFLAGS. e.g. note the lack of double quotes
    around CPPFLAGS=$(.. in https://sources.debian.net/src/avfs/1.0.1-2/debian/rules/#L20 .  Can be
    tested with: DEB_CPPFLAGS_APPEND='-D__TOTALL_FAKE_VARIABLE__=5' dpkg-buildpackage
ftbfs_wdatetime:
  description: |
    FTBFS if dpkg-buildflags contains -Wdate-time.
  deterministic: True
ftbfs_wdatetime_due_to_swig:
  url: https://bugs.debian.org/790102
  description: |
    FTBFS if dpkg-buildflags contains -Wdate-time and those buildflags are passed
    unchanged to swig.
  deterministic: True
ftbfs_with_pbuilder_due_malformed_dsc:
  description: |
    Package FTBFS in pbuilder due to a malformed .dsc, breaking CI.
  url: https://bugs.debian.org/741617
ftbfs_build_depends_not_available_on_amd64:
  description: |
    Package build depends on some package(s), which are not available on amd64.
    Relevant URLs:
    - https://wiki.debian.org/Build-Depends-Indep
    - https://bugs.launchpad.net/launchpad/+bug/217427
ftbfs_due_to_virtual_dependencies:
  description: |
    Package has virtual build dependencies or conflicts without listing a real package as alternative first. This causes pbuilder to fail the build and it also makes it virtually impossible to reproducible build the package.
  url: https://lintian.debian.org/tags/virtual-package-depends-without-real-package-depends.html
lc_messages_randomness:
  description: |
    Some unknown variation in LC_MESSAGES/....mo, not diagnosed by debbindiff.
timestamps_in_octave_doc_cache:
  description: |
    Octave inserts the build time, user and hostname into the doc-cache.
  url: https://bugs.debian.org/778458
ftbfs_in_jenkins_setup:
  description: |
    Could be:
    1) an attempt to connect to somewhere, and hits a machine claiming to be squid on jenkins.d.n.
    2) jobs that try to bind to localhost port which are in use by something in the
       jenkins machines. The occupied ports are: 22, 25, 80, 443, 3128, 3129, 4949, 34167
    3) there is some trouble with pbuilder in wheezy for a handful of packages, usually with tests involving networking.
    4) https://bugs.debian.org/780725 is worked around like described in msg#60 of that bug, that is, apt in pbuilder is configured to use thte proxy and http_proxy is unset.
    5) something else, the machine is heavily loaded all the time...
ftbfs_on_2nd_build:
  description: |
    Packages builds fine in the first build attempt and fails in the second.
    Packages affected by this issue need to be further investigated, the cause is likely due to changed parameters.
timestamps_in_description_files_generated_by_r-base-dev:
  description: |
    r-base-dev leaves a build timestamp (showing date + time + timezone) in
    the /usr/lib/R/library/*/Description files it generates.
    This is fixable with GNU R >= 3.2.0 from unstable. If your package uses the
    r-cran.mk template in debian/rules you should be fine. If not, see
    https://bugs.debian.org/782764 for reference how to fix your package.
  deterministic: True
timestamps_in_manpages_generated_by_sphinx:
  description: |
    Manpages generated with Sphinx embed the build date.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInManpagesGeneratedBySphinx
timestamps_in_manpages_generated_by_txt2man:
  description: |
    Manpages generated with txt2man embed the date.
    .
    Pass "-d $date" to txt2man to force a (reproducible) date.
  url: http://bugs.debian.org/790801
timestamps_in_manpages_generated_by_help2man:
  description: |
    Manpages generated with help2man embed the month and year by default.
    This is currently only detected on the 1st of a month, because we are varying the timezone to span more than a day.
  url: https://bugs.debian.org/787444
fonts_in_pdf_files:
  description: |
    The internally used names/identifiers of fonts embedded into PDF files varies.
    The order of embedded fonts can also be different.
timestamps_in_groovy_class_files:
  description: |
    groovyc includes timestamps in class files.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInClassFilesCompiledByGroovy
random_order_in_maven_plugin_xml:
  description: |
    mvn plugin.xml (-plugin packages) is generated in a random order.
    .
    Should be fixed in 3.3-1.
    https://sources.debian.net/src/maven-plugin-tools/3.2-2/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java/#L167
    https://sources.debian.net/src/maven-plugin-tools/3.3-1/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java/#L166
  url: https://jira.codehaus.org/browse/MPLUGIN-261
date_in_maven_plugin_xml:
  description: |
    maven-plugin-tools includes the date in plugin.xml and plugin-help.xml.  Visible with timezone changes.
  deterministic: True
  url: http://bugs.debian.org/784265
timestamps_in_documentation_generated_by_edoc:
  description: |
    The Erland documentation generator EDoc is embedding timestamps in its documentation.
timestamps_in_qch:
  description: |
    qhelpgenerator inserts a timestamp into documentation (qch) files,
    which are sqlite3 databases.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInDatabaseGeneratedByQhelpgenerator
random_ispell_hash_files:
  description: |
    buildhash from ispell produces undeterministic .hash files.
  url: http://bugs.debian.org/778862
timestamps_in_java_stapler_files:
  description: |
    Another variation of timestamps_in_maven_version_files where someone's
    used the same doomed properties writer.
timestamps_in_gjdoc_properties_files:
  description: |
    Another variation of timestamps_in_maven_version_files where someone's
    used the same doomed properties writer, this time in GNU Gjdoc API Documentation.
timestamps_manually_added_needs_further_investigation:
  description: |
    Packages which intentionally add the timestamp to their build or files,
    but aren't obviously using any tool or system which has this as a core issue.
    Interesting because they could be fixed by faketime'ing up the whole system.
uid_and_gid_in_jar:
  description: |
    Some tool has managed to write uid and gid as an extended attribute into a jar file.
timestamps_in_qmake_makefiles:
  description: |
    Some -dev packages ship generated qmake makefiles, which contain the generation time.
user_hostname_manually_added_requiring_further_investigation:
  description: |
    Packages which intentionally capture the username or hostname into a custom format,
    but aren't obviously using any tool or system which has this as a core issue.
    Interesting because they could be fixed by fixing these things at build time.
random_order_in_plexus_comonents_xml:
  description: |
    Plexus, a Java plugin framework, writes its components.xml in a random order.
timestamps_in_epub:
  description: |
    epub files are zip files, and hence have a timestamp in them.
timestamps_in_jsdoc_toolkit_documentation:
  description: |
    JsDoc Toolkit writes the documentation generation time into generated HTML.
randomness_in_objects_inv:
  description: |
    Some Python documentation tool writes objects.inv files in a random order.
randomness_in_ocaml_a_files:
  description: |
    ocamlopt writes /tmp/caml*[randomness].o into its .a archives. Not stripped
    by dh_strip as the filenames are not ^lib(.+).a$.
    .
    Patch to strip could be https://gist.github.com/9df3804fa51b9bf78faf (could
    also be done in dh_strip - there is already an ocaml-specific exception).
    .
    However, there are still timestamps (as strings) in .a files afterwards.
    .
    * asmcomp/asmlink.ml (eg. /tmp/camlstartupef12cc.o)
    * debian/patches/0008-Embed-bytecode-in-C-object-when-using-custom.patch
      (eg. camlobj754fda.c)
    * asmcomp/asmpackager.ml (eg. /tmp/camlCalendarLib__8f1, I /think/)
timestamp_in_pear_registry_files:
  description: |
    PEAR registry files are serialized PHP objects that contain a timestamp.
  url: https://bugs.debian.org/750697
berkeley_db_variation_requiring_further_investigation:
  description: |
    Berkeley databases are not reproducibly.
    This issue requires further poking to understand way.
    https://github.com/libzhuyin/libzhuyin/issues/7
  url: http://lists.alioth.debian.org/pipermail/reproducible-builds/Week-of-Mon-20150302/001188.html
different_due_to_umask:
  description: |
    Files have varying permissions because of different umasks.
  deterministic: True
randomness_in_qdoc:
  description: |
    Non-deterministic order of <tag> and <file> elements in XML. See
    http://sources.debian.net/src/qtbase-opensource-src/5.3.2%2Bdfsg-4/src/tools/qdoc/helpprojectwriter.cpp/?hl=630#L787
    etc.
timestamps_in_python_version_numbers:
  description: |
    python-setuptools is appending the build date to a Python version number.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInPythonVersionNumbers
timezone_variance_because_of_automake_mdate:
  description: |
    automake's mdate-sh script pretty-prints the modification time of a file.
    This output can influence further steps in the build process and make it unreproducible.
  url: https://wiki.debian.org/ReproducibleBuilds/TimezoneVarianceBecauseOfAutomakeMdate
timestamps_in_dictionaries:
  description: |
    Dictionaries built with dictfmt/dictzip (often called .dict.dz) contain timestamps:
      This file was converted from the original database on:
        $DATE
    dictzip gzip-compresses the dictionary and includes a timestamp in the header.
    .
    Call dictfmt with --without-time to prevent the timestamp in the dictionary.
  url: https://bugs.debian.org/776430
timestamps_in_manpages_generated_by_docbook2x:
  description: |
    docbook2x-man embeds the build date into generated manpages.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsInManpagesGeneratedByDocbook2x
leaks_path_environment_variable:
  description: |
    The environment variable PATH is embedded in the build result.
    Sometimes it's just leaked into some file (so "just" causing reproducibility issues), while sometimes this PATH is also used for building, which might give unexpected and broken results.
timestamps_in_manpages_generated_by_docbook_xsl:
  description: |
    docbook-xsl writes the build date into the header; sometimes driven by asciidoc, sometimes by xsltproc.
    Date change visible on Jenkins due to timezone changes.
timestamps_in_documentation_generated_by_rdtool:
  description: |
    RD is a document formatter used for ruby programs. When generating manpages, it embeds the
    current month and year.
    This is currently only detected on the 1st of a month, because we are varying the timezone to span more than a day.
captures_kernel_version:
  description: |
    Stores the kernel version (uname -a, /proc/version, etc.) output, normally for debugging purposes.
timestamps_in_allegro_dat_files:
  description: |
    `.dat` files from the Allegro framework are basically archives. The `dat`
    command line tool will add a DATE property with the file modification time.
randomness_in_fat_lto_objects:
  description: |
    Objects built with `gcc -flto -ffat-lto-objects` will contain random strings
    in the form of `.gnu.lto_.inline.24c30dabb443e726`. They will change at
    each build.
    Temporary (?) solution: pass the full path of the source as the argument
    to `-frandom-seed`.
  url: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66305
  deterministic: True
randomness_in_c_files_generated_by_extutils_parsexs:
  description: |
    ExtUtils::ParseXS generates undeterministic C files (differing order) out of .xs files.
    This leads to differently compiled objects.
timestamps_generated_by_eigenbase_resgen:
  description: |
    XOMGenTask adds timestamps to generated files, see src/org/eigenbase/xom/MetaGenerator.java line 1202.
    ResourceGenTask adds timestamps too but can be avoided using commentstyle with scm-safe value.
debbindiff_crashes:
  description: |
    Packages with this issue can be built successfully, but debbindiff crashes while comparing the results.
ftbfs_due_to_obsolete_dependencies:
  description: |
    FTBFS because of build dependencies that used to exist at some point but no longer exist in testing/unstable/experimental.
    Known examples (of dependencies which used to exist):
    - apache2-threaded-dev
    - automake1.9
    - gnat-4.4
    - libabiword-2.9-dev
    - libbuzztard-dev
    - libemail-send-perl
    - libgd-gd2-perl
    - libgnutls-dev
    - libtiff4-dev
    - libvdkxdb2-dev
    - libxmlrpc-c++4-dev
    Someone should file serious bugs about these issues, if those bugs haven't been filed already. Once they are filed, the bugs should be annotated to packages.yml.
timestamps_in_documentation_generated_by_ur:
  description: |
    UR::Namespace::Command::Update::Doc in the libur-perl package generates documentation with embedded timestamps.
    .
    See doc_sections() in lib/Command/V1.pm and lib/Command/View/DocMethods.pm in the libur-perl source.
    .
    http://sources.debian.net/src/libur-perl/latest/lib/Command/V1.pm/#L755
    .
    http://sources.debian.net/src/libur-perl/latest/lib/Command/View/DocMethods.pm/#L185
ftbfs_due_to_python_packaging_problems:
  description: |
    There seem to be some packaging problems in sid for Python and Zope, that remain uninvestigated,
    and there doesn't seem to be a bug for them.  "ImportError: cannot import name component_re" and
    "NameError: name '_multiarch' is not defined" are symptoms.  Please delete this issue if anything builds
timestamps_from_tex4ht:
  description: |
    Tex4ht adds timestamps into the HTML output files.
  url: https://wiki.debian.org/ReproducibleBuilds/TimestampsFromTex4ht
timestamps_from_imake_in_xutils:
  url: https://bugs.debian.org/789964
  description: |
    The imake tool from xutils-dev defines a gzip command without `-n` that is used when compressing font files by other packages
random_order_in_texinfo_indices:
  url: https://bugs.debian.org/790065
  description: |
    texinfo/makeinfo can generate internal indices in a non-deterministic order
    as the sorting is not stable with respect to line numbers.
snapshot_placeholder_replaced_with_timestamp_in_pom_properties:
  description: |
    pom.xml uses a <version> like 0.1-SNAPSHOT which is then replaced with the
    timestamp in the filename of the finished .jar. For example
    /usr/share/eclipse/dropins/cdt-pkg-config/eclipse/plugins/org.eclipse.cdt.managedbuilder.pkgconfig_0.8.0.201506071017.jar
different_encoding:
  description: |
    Files were built with different encoding (non-UTF-8 vs. UTF-8).
ftbfs_uninvestigated_unsatisfiable_dependencies:
  description: |
    Packages which fail to satisfy dependencies.  Some of these (but probably not all that many)
    actually have ftbfs_due_to_virtual_dependencies.
  deterministic: True
ftbfs_uninvestigated_on_jenkins_only:
  description: |
    Packages which fail to build, but seemingly only on Jenkins.
ftbfs_uninvestigated_scary_big_packages:
  description: |
    Some large packages that seem to fail for compound reasons that haven't been fully understood.  (temporary issue)
  deterministic: True
timestamps_in_documentation_generated_by_org_mode:
  description: |
    Org-mode adds timestamps (which also vary by TZ)
timestamps_in_pdf_generated_by_matplotlib:
  description: |
    eg. Creator (matplotlib 1.4.2, http://matplotlib.org)
ftbfs_uninvestigated_ruby_transition:
  description: |
    The currently ongoing ruby2.2 transition is causing test failures and thus build failures.
    Packages with this issue will be looked at (again) once this transition has finished.
  url: https://release.debian.org/transitions/html/ruby2.2.html
lynx_dump_varies_output_with_locale:
  description: |
    Packages use `lynx -dump in.html > out.txt`, but this varies by locale. See
    https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=770011
elinks_dump_varies_output_with_locale:
  description: |
    Packages use `elinks -dump in.html > out.txt`, but this varies by locale.
plist_weirdness:
  description: |
    Gnustep (?) plist files can have missing/non-determistic ordering depending
    on locale (?)
debiandoc_sgml_timestamp:
  description: |
    <date> element in debiandoc-sgml results in build timestamp which
    additionally varies by locale.
docbook2txt_locale:
  description: |
    docbook2txt varies output based on locale, usually with non-ascii chars.
texinfo_mdate_sh_varies_by_timezone:
  description:
    If you use version.texi, mdate-sh will output a TZ-sensitive updated date.
    http://www.delorie.com/gnu/docs/automake/automake_81.html
random_order_in_javahelper_depends:
  description:
    javahelper (jh_*, etc.) can generate Depends substvars in a
    non-determinstic order. Untested patch is https://gist.github.com/4a219d84e8a4091acf58
